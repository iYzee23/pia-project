{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class PdfUploadComponent {\n  constructor() {\n    this.porukaEvent = new EventEmitter();\n    this.fileEvent = new EventEmitter();\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (!file) {\n      this.porukaEvent.emit(\"Niste izabrali fajl.\");\n      return;\n    }\n    if (file.type.match('application/pdf')) this.handlePdf(file);else this.porukaEvent.emit(\"Nepodrzan tip fajla. Izaberite PDF.\");\n  }\n  handlePdf(file) {\n    if (file.size > 3000000) {\n      this.porukaEvent.emit(\"PDF je preveliki. Maksimalna velicina je 3MB.\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => {\n      this.fileEvent.emit(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  }\n  static #_ = this.ɵfac = function PdfUploadComponent_Factory(t) {\n    return new (t || PdfUploadComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PdfUploadComponent,\n    selectors: [[\"app-pdf-upload\"]],\n    outputs: {\n      porukaEvent: \"porukaEvent\",\n      fileEvent: \"fileEvent\"\n    },\n    decls: 1,\n    vars: 0,\n    consts: [[\"type\", \"file\", \"accept\", \"application/pdf\", 3, \"change\"]],\n    template: function PdfUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"change\", function PdfUploadComponent_Template_input_change_0_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","PdfUploadComponent","constructor","porukaEvent","fileEvent","onFileSelected","event","file","target","files","emit","type","match","handlePdf","size","reader","FileReader","onload","e","result","readAsDataURL","_","_2","selectors","outputs","decls","vars","consts","template","PdfUploadComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","PdfUploadComponent_Template_input_change_0_listener","$event","ɵɵelementEnd"],"sources":["C:\\Fakultet\\IV godina\\VII semestar\\Programiranje internet aplikacija\\Projekat\\frontend\\src\\app\\components\\pdf-upload\\pdf-upload.component.ts","C:\\Fakultet\\IV godina\\VII semestar\\Programiranje internet aplikacija\\Projekat\\frontend\\src\\app\\components\\pdf-upload\\pdf-upload.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-pdf-upload',\n  templateUrl: './pdf-upload.component.html',\n  styleUrls: ['./pdf-upload.component.css']\n})\nexport class PdfUploadComponent {\n  @Output() porukaEvent = new EventEmitter<string>();\n  @Output() fileEvent = new EventEmitter<string>();\n\n  onFileSelected(event: any) {\n    const file = event.target.files[0];\n\n    if (!file) {\n      this.porukaEvent.emit(\"Niste izabrali fajl.\");\n      return;\n    }\n\n    if (file.type.match('application/pdf')) this.handlePdf(file);\n    else this.porukaEvent.emit(\"Nepodrzan tip fajla. Izaberite PDF.\");\n  }\n\n  private handlePdf(file: File) {\n    if (file.size > 3000000) {\n      this.porukaEvent.emit(\"PDF je preveliki. Maksimalna velicina je 3MB.\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      this.fileEvent.emit(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  }\n}\n","<input type=\"file\" (change)=\"onFileSelected($event)\" accept=\"application/pdf\">\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;AAO/D,OAAM,MAAOC,kBAAkB;EAL/BC,YAAA;IAMY,KAAAC,WAAW,GAAG,IAAIH,YAAY,EAAU;IACxC,KAAAI,SAAS,GAAG,IAAIJ,YAAY,EAAU;;EAEhDK,cAAcA,CAACC,KAAU;IACvB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElC,IAAI,CAACF,IAAI,EAAE;MACT,IAAI,CAACJ,WAAW,CAACO,IAAI,CAAC,sBAAsB,CAAC;MAC7C;;IAGF,IAAIH,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC,KACxD,IAAI,CAACJ,WAAW,CAACO,IAAI,CAAC,qCAAqC,CAAC;EACnE;EAEQG,SAASA,CAACN,IAAU;IAC1B,IAAIA,IAAI,CAACO,IAAI,GAAG,OAAO,EAAE;MACvB,IAAI,CAACX,WAAW,CAACO,IAAI,CAAC,+CAA+C,CAAC;MACtE;;IAGF,MAAMK,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAM,IAAI;MACzB,IAAI,CAACd,SAAS,CAACM,IAAI,CAACQ,CAAC,CAACV,MAAM,CAACW,MAAM,CAAC;IACtC,CAAC;IACDJ,MAAM,CAACK,aAAa,CAACb,IAAI,CAAC;EAC5B;EAAC,QAAAc,CAAA,G;qBA3BUpB,kBAAkB;EAAA;EAAA,QAAAqB,EAAA,G;UAAlBrB,kBAAkB;IAAAsB,SAAA;IAAAC,OAAA;MAAArB,WAAA;MAAAC,SAAA;IAAA;IAAAqB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP/BE,EAAA,CAAAC,cAAA,eAA8E;QAA3DD,EAAA,CAAAE,UAAA,oBAAAC,oDAAAC,MAAA;UAAA,OAAUL,GAAA,CAAA1B,cAAA,CAAA+B,MAAA,CAAsB;QAAA,EAAC;QAApDJ,EAAA,CAAAK,YAAA,EAA8E"},"metadata":{},"sourceType":"module","externalDependencies":[]}